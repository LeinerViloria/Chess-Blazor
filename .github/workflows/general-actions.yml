name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

      
    - name: Set up version variable
      id: vars
      run: echo "::set-output name=version::$(date +%s)"
    
    - name: Set up Git
      run: |
        git config --global user.email "vilorialeiner2002@gmail.com"
        git config --global user.name "LeinerViloria"
    
    - name: Generate release
      run: |
        git branch | grep release_${{ steps.vars.outputs.version }} && git branch -D release_${{ steps.vars.outputs.version }} || echo "No existing release branch"
        git fetch --all
        git checkout main
        git pull origin main
        git checkout -b release_${{ steps.vars.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Push release branch
      run: |
        git push --set-upstream origin release_${{ steps.vars.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Build the Docker image
      run: docker build -t lviloria/chessai:${{ steps.vars.outputs.version }} .

    - name: Push the Docker image
      run: docker push lviloria/chessai:${{ steps.vars.outputs.version }}
