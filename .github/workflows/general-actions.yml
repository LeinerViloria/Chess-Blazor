name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.x' # Ajusta la versión de .NET según sea necesario

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

    - name: Publish
      run: dotnet publish --configuration Release --output ./publish --no-restore

    - name: Set up version variable
      id: vars
      run: echo "::set-output name=version::$(date +%s)"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.vars.outputs.version }}
        body: |
          Release of version ${{ steps.vars.outputs.version }}.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish
        asset_name: ChessAi.zip
        asset_content_type: application/zip

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Build the Docker image
      run: docker build -t lviloria/chessai:${{ steps.vars.outputs.version }} .

    - name: Push the Docker image
      run: docker push lviloria/chessai:${{ steps.vars.outputs.version }}
